#Wael's code
# __________________________________________________________________________________________________________________________________ 
from cv2 import imshow
import numpy as np
import cv2 as cv
from PIL import Image
from cv2 import threshold
from cv2 import imwrite
from numpy import uint, uint8
import numpy


#function to reduce noise - YES -
def noise_reducer_cv(image):
    import numpy #numerical data lib
    kernel= numpy.ones((1,1), numpy.uint8) 
    image=cv.dilate(image,kernel,iterations=1)
    kernel= numpy.ones((1,1), numpy.uint8)
    image=cv.erode(image,kernel,iterations=1)
    image=cv.morphologyEx(image,cv.MORPH_CLOSE,kernel)
    image=cv.medianBlur(image, 3)
    return (image)
    
def thin_font_cv(image):
    import numpy as np
    image=cv.bitwise_not(image)
    kernel=np.ones((2,2), np.uint8)
    image= cv.erode(image,kernel,iterations=1)
    image=cv.bitwise_not(image)
    return (image)

image=cv.imread('page_11.jpg')

def dynamic_resize(image,height_short=8465,height_long=8465):
    height=image.shape[0]
    width=image.shape[1]
    if height>=width:
        n=height_short//height
        print(n)
    else:
        n=height_long//height
    return cv.resize(image, (0, 0), fx =3 , fy =3 )
